{% extends "EPlanPlanningBundle::template.html.twig" %}
{%block titrePage %}
           
   
{%endblock %}
{% block contenu %}
 <div class="box" style="padding:15px 15px 15px 20px;" style="border-top-color: skyblue;">
       <div class="box-header with-border">
         <h3 class="box-title">Enregistrement d'un enseignant</h3>
       </div>
 <div class="box-body"> 
 <form method="post" action="{{path('e_plan_planning_registrer_enseignant')}}"  style="margin-bottom: 100px;" {{form_enctype(form) }}>
{# Les erreurs générales du formulaire. #}
{{ form_errors(form) }}
<div style="margin-bottom: 20px;">
{# Génération du label. #}
{{ form_label(form.nom, "Nom de l'enseignant") }}
{# Affichage des erreurs pour ce champ précis. #}
{{ form_errors(form.nom) }}
{# Génération de l'input. #}
{{ form_widget(form.nom) }}
</div>
{# Idem pour un autre champ. #}
<div style="margin-bottom: 20px;">
{{ form_label(form.prenom, "Prenom de l'enseignant") }}
{{ form_errors(form.prenom) }}
{{ form_widget(form.prenom) }}
</div>

<div style="margin-bottom: 20px;">
{{ form_label(form.titre, "Grade de l'enseignant") }}
{{ form_errors(form.titre) }}
{{ form_widget(form.titre) }}
</div>
<div style="margin-bottom: 20px;">
{{ form_label(form.tel, "Telephone de l'enseignant")}}
{{ form_errors(form.tel)}}
{{ form_widget(form.tel) }}
</div>
<div style="margin-bottom: 20px;">
{{ form_label(form.email, "Email de l'enseignant") }}
{{ form_errors(form.email) }}
{{ form_widget(form.email) }}
</div>
<div>
{{ form_label(form.departement, "Departement de l'enseignant") }}
{{ form_errors(form.departement) }}
{{ form_widget(form.departement) }}
</div>
{{ form_rest(form) }}
{# Génération des champs pas encore écrits.
Dans cet exemple, ce serait « date », « auteur » et « publication »
,m
ais aussi le champ CSRF (géré automatiquement par Symfony !)
et tous les champs cachés (type « hidden »). #}
 </div>
 <input class="btn btn-warning" type="reset"  style="margin-right: 100px;"/> 
 <input class="btn btn-success" type="submit" name="good" value="Creer" style="margin-right: 100px;"/>
<input class="btn btn-success" type="submit" name="good" value="Creer puis attribuer ECs"/> 
 
 </div>
<!--
     {# On charge la bibliothèque jQuery. Ici, je la prends depuis le
site jquery.com,
mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
{# Voici le script en question : #}
<script type="text/javascript">
$(document).ready(function() {
// On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
var $container = $('div#sdz_blogbundle_articletype_categories');
// On ajoute un lien pour ajouter une nouvelle catégorie
var $lienAjout = $('<a href="#" id="ajout_categorie"
class="btn">Ajouter une catégorie</a>');
$container.append($lienAjout);
// On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
$lienAjout.click(function(e) {
ajouterCategorie($container);
e.preventDefault(); // évite qu'un # apparaisse dans l'URL
return false;
});
// On définit un compteur unique pour nommer les champs qu'on va
ajouter dynamiquement
var index = $container.find(':input').length;
// On ajoute un premier champ directement s'il n'en existe pas
déjà un (cas d'un nouvel article par exemple).
if (index == 0) {
ajouterCategorie($container);
} else {
// Pour chaque catégorie déjà existante, on ajoute un lien de
suppression
$container.children('div').each(function() {
ajouterLienSuppression($(this));
});
}
// La fonction qui ajoute un formulaire Categorie
function ajouterCategorie($container) {
// Dans le contenu de l'attribut « data-prototype », on
remplace :
// - le texte "__name__label__" qu'il contient par le label du
champ
// - le texte "__name__" qu'il contient par le numéro du champ
var $prototype = $($container.attr('dataprototype').
replace(/__name__label__/g, 'Catégorie n°' + (index+1))
.replace(/__name__/g, index));
// On ajoute au prototype un lien pour pouvoir supprimer la
catégorie
ajouterLienSuppression($prototype);
// On ajoute le prototype modifié à la fin de la balise <div>
$container.append($prototype);
// Enfin, on incrémente le compteur pour que le prochain ajout
se fasse avec un autre numéro
index++;
}
// La fonction qui ajoute un lien de suppression d'une catégorie
function ajouterLienSuppression($prototype) {
// Création du lien
$lienSuppression = $('<a href="#" class="btn btndanger">
Supprimer</a>');
// Ajout du lien
$prototype.append($lienSuppression);
// Ajout du listener sur le clic du lien
$lienSuppression.click(function(e) {
$prototype.remove();
e.preventDefault(); // évite qu'un # apparaisse dans l'URL
return false;
});
}
});
</script>

-->
 </form>

 {% endblock %}